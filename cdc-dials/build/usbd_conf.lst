ARM GAS  /tmp/ccgx2QYb.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_PCD_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_PCD_MspInit:
  24              	.LFB43:
  25              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file    USB_Device/CDC_Standalone/Src/usbd_conf.c
   4:Src/usbd_conf.c ****   * @author  MCD Application Team
   5:Src/usbd_conf.c ****   * @brief   This file implements the USB Device library callbacks and MSP
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   * @attention
   8:Src/usbd_conf.c ****   *
   9:Src/usbd_conf.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics International N.V. 
  10:Src/usbd_conf.c ****   * All rights reserved.</center></h2>
  11:Src/usbd_conf.c ****   *
  12:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  13:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  14:Src/usbd_conf.c ****   *
  15:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  16:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  17:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  18:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  19:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  20:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  21:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  22:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  23:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  24:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  25:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  26:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  27:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
  28:Src/usbd_conf.c ****   *    this license. 
  29:Src/usbd_conf.c ****   *
  30:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  31:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  32:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  33:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
ARM GAS  /tmp/ccgx2QYb.s 			page 2


  34:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  35:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  36:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  37:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  38:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  39:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  40:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  41:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  42:Src/usbd_conf.c ****   *
  43:Src/usbd_conf.c ****   ******************************************************************************
  44:Src/usbd_conf.c ****   */
  45:Src/usbd_conf.c **** 
  46:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  47:Src/usbd_conf.c **** #include "stm32f0xx_hal.h"
  48:Src/usbd_conf.c **** #include "usbd_core.h"
  49:Src/usbd_conf.c **** #include "main.h"
  50:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  51:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  52:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  53:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  54:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd;
  55:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  56:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  57:Src/usbd_conf.c **** 
  58:Src/usbd_conf.c **** /*******************************************************************************
  59:Src/usbd_conf.c ****                        PCD BSP Routines
  60:Src/usbd_conf.c **** *******************************************************************************/
  61:Src/usbd_conf.c **** 
  62:Src/usbd_conf.c **** /**
  63:Src/usbd_conf.c ****   * @brief  Initializes the PCD MSP.
  64:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
  65:Src/usbd_conf.c ****   * @retval None
  66:Src/usbd_conf.c ****   */
  67:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd)
  68:Src/usbd_conf.c **** {
  26              		.loc 1 68 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39              	.LBB2:
  69:Src/usbd_conf.c ****   GPIO_InitTypeDef  GPIO_InitStruct;
  70:Src/usbd_conf.c ****   
  71:Src/usbd_conf.c ****   /* Enable the GPIOA clock */
  72:Src/usbd_conf.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  40              		.loc 1 72 0
  41 0004 154C     		ldr	r4, .L2
  42 0006 6269     		ldr	r2, [r4, #20]
  43 0008 8021     		movs	r1, #128
ARM GAS  /tmp/ccgx2QYb.s 			page 3


  44 000a 8902     		lsls	r1, r1, #10
  45 000c 0A43     		orrs	r2, r1
  46 000e 6261     		str	r2, [r4, #20]
  47 0010 6369     		ldr	r3, [r4, #20]
  48 0012 0B40     		ands	r3, r1
  49 0014 0193     		str	r3, [sp, #4]
  50 0016 019B     		ldr	r3, [sp, #4]
  51              	.LBE2:
  73:Src/usbd_conf.c ****   
  74:Src/usbd_conf.c ****   /* Configure USB DM and DP pins.
  75:Src/usbd_conf.c ****      This is optional, and maintained only for user guidance. */
  76:Src/usbd_conf.c ****   GPIO_InitStruct.Pin = (GPIO_PIN_11 | GPIO_PIN_12);
  52              		.loc 1 76 0
  53 0018 C023     		movs	r3, #192
  54 001a 5B01     		lsls	r3, r3, #5
  55 001c 0393     		str	r3, [sp, #12]
  77:Src/usbd_conf.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  56              		.loc 1 77 0
  57 001e 0223     		movs	r3, #2
  58 0020 0493     		str	r3, [sp, #16]
  78:Src/usbd_conf.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  59              		.loc 1 78 0
  60 0022 0022     		movs	r2, #0
  61 0024 0592     		str	r2, [sp, #20]
  79:Src/usbd_conf.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  62              		.loc 1 79 0
  63 0026 0332     		adds	r2, r2, #3
  64 0028 0692     		str	r2, [sp, #24]
  80:Src/usbd_conf.c ****   GPIO_InitStruct.Alternate = GPIO_AF2_USB;
  65              		.loc 1 80 0
  66 002a 0793     		str	r3, [sp, #28]
  81:Src/usbd_conf.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct); 
  67              		.loc 1 81 0
  68 002c 9020     		movs	r0, #144
  69              	.LVL1:
  70 002e 03A9     		add	r1, sp, #12
  71 0030 C005     		lsls	r0, r0, #23
  72 0032 FFF7FEFF 		bl	HAL_GPIO_Init
  73              	.LVL2:
  74              	.LBB3:
  82:Src/usbd_conf.c ****   
  83:Src/usbd_conf.c ****   /* Enable USB FS Clock */
  84:Src/usbd_conf.c ****   __HAL_RCC_USB_CLK_ENABLE();
  75              		.loc 1 84 0
  76 0036 E269     		ldr	r2, [r4, #28]
  77 0038 8021     		movs	r1, #128
  78 003a 0904     		lsls	r1, r1, #16
  79 003c 0A43     		orrs	r2, r1
  80 003e E261     		str	r2, [r4, #28]
  81 0040 E369     		ldr	r3, [r4, #28]
  82 0042 0B40     		ands	r3, r1
  83 0044 0293     		str	r3, [sp, #8]
  84 0046 029B     		ldr	r3, [sp, #8]
  85              	.LBE3:
  85:Src/usbd_conf.c ****   
  86:Src/usbd_conf.c ****   /* Set USB FS Interrupt priority */
  87:Src/usbd_conf.c ****   HAL_NVIC_SetPriority(USB_IRQn, 3, 0);
ARM GAS  /tmp/ccgx2QYb.s 			page 4


  86              		.loc 1 87 0
  87 0048 0022     		movs	r2, #0
  88 004a 0321     		movs	r1, #3
  89 004c 1F20     		movs	r0, #31
  90 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  91              	.LVL3:
  88:Src/usbd_conf.c ****   
  89:Src/usbd_conf.c ****   /* Enable USB FS Interrupt */
  90:Src/usbd_conf.c ****   HAL_NVIC_EnableIRQ(USB_IRQn);
  92              		.loc 1 90 0
  93 0052 1F20     		movs	r0, #31
  94 0054 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  95              	.LVL4:
  91:Src/usbd_conf.c **** }
  96              		.loc 1 91 0
  97 0058 08B0     		add	sp, sp, #32
  98              		@ sp needed
  99 005a 10BD     		pop	{r4, pc}
 100              	.L3:
 101              		.align	2
 102              	.L2:
 103 005c 00100240 		.word	1073876992
 104              		.cfi_endproc
 105              	.LFE43:
 107              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 108              		.align	1
 109              		.global	HAL_PCD_MspDeInit
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
 115              	HAL_PCD_MspDeInit:
 116              	.LFB44:
  92:Src/usbd_conf.c **** 
  93:Src/usbd_conf.c **** /**
  94:Src/usbd_conf.c ****   * @brief  De-Initializes the PCD MSP.
  95:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
  96:Src/usbd_conf.c ****   * @retval None
  97:Src/usbd_conf.c ****   */
  98:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef *hpcd)
  99:Src/usbd_conf.c **** {
 117              		.loc 1 99 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL5:
 100:Src/usbd_conf.c ****   /* Disable USB FS Clock */
 101:Src/usbd_conf.c ****   __HAL_RCC_USB_CLK_DISABLE();
 123              		.loc 1 101 0
 124 0000 024A     		ldr	r2, .L5
 125 0002 D369     		ldr	r3, [r2, #28]
 126 0004 0249     		ldr	r1, .L5+4
 127 0006 0B40     		ands	r3, r1
 128 0008 D361     		str	r3, [r2, #28]
 102:Src/usbd_conf.c **** }
 129              		.loc 1 102 0
ARM GAS  /tmp/ccgx2QYb.s 			page 5


 130              		@ sp needed
 131 000a 7047     		bx	lr
 132              	.L6:
 133              		.align	2
 134              	.L5:
 135 000c 00100240 		.word	1073876992
 136 0010 FFFF7FFF 		.word	-8388609
 137              		.cfi_endproc
 138              	.LFE44:
 140              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_PCD_SetupStageCallback
 143              		.syntax unified
 144              		.code	16
 145              		.thumb_func
 146              		.fpu softvfp
 148              	HAL_PCD_SetupStageCallback:
 149              	.LFB45:
 103:Src/usbd_conf.c **** 
 104:Src/usbd_conf.c **** /*******************************************************************************
 105:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
 106:Src/usbd_conf.c **** *******************************************************************************/
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c **** /**
 109:Src/usbd_conf.c ****   * @brief  SOF callback.
 110:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 111:Src/usbd_conf.c ****   * @retval None
 112:Src/usbd_conf.c ****   */
 113:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 114:Src/usbd_conf.c **** {
 150              		.loc 1 114 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL6:
 155 0000 10B5     		push	{r4, lr}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 160 0002 0100     		movs	r1, r0
 115:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 161              		.loc 1 115 0
 162 0004 9C23     		movs	r3, #156
 163 0006 9B00     		lsls	r3, r3, #2
 164 0008 C058     		ldr	r0, [r0, r3]
 165              	.LVL7:
 166 000a 403B     		subs	r3, r3, #64
 167 000c 9C46     		mov	ip, r3
 168 000e 6144     		add	r1, r1, ip
 169              	.LVL8:
 170 0010 FFF7FEFF 		bl	USBD_LL_SetupStage
 171              	.LVL9:
 116:Src/usbd_conf.c **** }
 172              		.loc 1 116 0
 173              		@ sp needed
 174 0014 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccgx2QYb.s 			page 6


 175              		.cfi_endproc
 176              	.LFE45:
 178              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_PCD_DataOutStageCallback
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 184              		.fpu softvfp
 186              	HAL_PCD_DataOutStageCallback:
 187              	.LFB46:
 117:Src/usbd_conf.c **** 
 118:Src/usbd_conf.c **** /**
 119:Src/usbd_conf.c ****   * @brief  SOF callback.
 120:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 121:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 122:Src/usbd_conf.c ****   * @retval None
 123:Src/usbd_conf.c ****   */
 124:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 125:Src/usbd_conf.c **** {
 188              		.loc 1 125 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL10:
 193 0000 10B5     		push	{r4, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198 0002 0300     		movs	r3, r0
 126:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 199              		.loc 1 126 0
 200 0004 9C22     		movs	r2, #156
 201 0006 9200     		lsls	r2, r2, #2
 202 0008 8058     		ldr	r0, [r0, r2]
 203              	.LVL11:
 204 000a 4A01     		lsls	r2, r1, #5
 205 000c 9B18     		adds	r3, r3, r2
 206              	.LVL12:
 207 000e 3D33     		adds	r3, r3, #61
 208 0010 FF33     		adds	r3, r3, #255
 209 0012 1A68     		ldr	r2, [r3]
 210 0014 FFF7FEFF 		bl	USBD_LL_DataOutStage
 211              	.LVL13:
 127:Src/usbd_conf.c **** }
 212              		.loc 1 127 0
 213              		@ sp needed
 214 0018 10BD     		pop	{r4, pc}
 215              		.cfi_endproc
 216              	.LFE46:
 218              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 219              		.align	1
 220              		.global	HAL_PCD_DataInStageCallback
 221              		.syntax unified
 222              		.code	16
 223              		.thumb_func
ARM GAS  /tmp/ccgx2QYb.s 			page 7


 224              		.fpu softvfp
 226              	HAL_PCD_DataInStageCallback:
 227              	.LFB47:
 128:Src/usbd_conf.c **** 
 129:Src/usbd_conf.c **** /**
 130:Src/usbd_conf.c ****   * @brief  SOF callback.
 131:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 132:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 133:Src/usbd_conf.c ****   * @retval None
 134:Src/usbd_conf.c ****   */
 135:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 136:Src/usbd_conf.c **** {
 228              		.loc 1 136 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL14:
 233 0000 10B5     		push	{r4, lr}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
 238 0002 0300     		movs	r3, r0
 137:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 239              		.loc 1 137 0
 240 0004 9C22     		movs	r2, #156
 241 0006 9200     		lsls	r2, r2, #2
 242 0008 8058     		ldr	r0, [r0, r2]
 243              	.LVL15:
 244 000a 4A01     		lsls	r2, r1, #5
 245 000c 9B18     		adds	r3, r3, r2
 246              	.LVL16:
 247 000e DA6B     		ldr	r2, [r3, #60]
 248 0010 FFF7FEFF 		bl	USBD_LL_DataInStage
 249              	.LVL17:
 138:Src/usbd_conf.c **** }
 250              		.loc 1 138 0
 251              		@ sp needed
 252 0014 10BD     		pop	{r4, pc}
 253              		.cfi_endproc
 254              	.LFE47:
 256              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 257              		.align	1
 258              		.global	HAL_PCD_SOFCallback
 259              		.syntax unified
 260              		.code	16
 261              		.thumb_func
 262              		.fpu softvfp
 264              	HAL_PCD_SOFCallback:
 265              	.LFB48:
 139:Src/usbd_conf.c **** 
 140:Src/usbd_conf.c **** /**
 141:Src/usbd_conf.c ****   * @brief  SOF callback.
 142:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 143:Src/usbd_conf.c ****   * @retval None
 144:Src/usbd_conf.c ****   */
 145:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
ARM GAS  /tmp/ccgx2QYb.s 			page 8


 146:Src/usbd_conf.c **** {
 266              		.loc 1 146 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              	.LVL18:
 271 0000 10B5     		push	{r4, lr}
 272              	.LCFI5:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 4, -8
 275              		.cfi_offset 14, -4
 147:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 276              		.loc 1 147 0
 277 0002 9C23     		movs	r3, #156
 278 0004 9B00     		lsls	r3, r3, #2
 279 0006 C058     		ldr	r0, [r0, r3]
 280              	.LVL19:
 281 0008 FFF7FEFF 		bl	USBD_LL_SOF
 282              	.LVL20:
 148:Src/usbd_conf.c **** }
 283              		.loc 1 148 0
 284              		@ sp needed
 285 000c 10BD     		pop	{r4, pc}
 286              		.cfi_endproc
 287              	.LFE48:
 289              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 290              		.align	1
 291              		.global	HAL_PCD_ResetCallback
 292              		.syntax unified
 293              		.code	16
 294              		.thumb_func
 295              		.fpu softvfp
 297              	HAL_PCD_ResetCallback:
 298              	.LFB49:
 149:Src/usbd_conf.c **** 
 150:Src/usbd_conf.c **** /**
 151:Src/usbd_conf.c ****   * @brief  SOF callback.
 152:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 153:Src/usbd_conf.c ****   * @retval None
 154:Src/usbd_conf.c ****   */
 155:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 156:Src/usbd_conf.c **** {   
 299              		.loc 1 156 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              	.LVL21:
 304 0000 70B5     		push	{r4, r5, r6, lr}
 305              	.LCFI6:
 306              		.cfi_def_cfa_offset 16
 307              		.cfi_offset 4, -16
 308              		.cfi_offset 5, -12
 309              		.cfi_offset 6, -8
 310              		.cfi_offset 14, -4
 311 0002 0500     		movs	r5, r0
 157:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, USBD_SPEED_FULL);
 312              		.loc 1 157 0
ARM GAS  /tmp/ccgx2QYb.s 			page 9


 313 0004 9C24     		movs	r4, #156
 314 0006 A400     		lsls	r4, r4, #2
 315 0008 0121     		movs	r1, #1
 316 000a 0059     		ldr	r0, [r0, r4]
 317              	.LVL22:
 318 000c FFF7FEFF 		bl	USBD_LL_SetSpeed
 319              	.LVL23:
 158:Src/usbd_conf.c ****   /* Reset Device */
 159:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 320              		.loc 1 159 0
 321 0010 2859     		ldr	r0, [r5, r4]
 322 0012 FFF7FEFF 		bl	USBD_LL_Reset
 323              	.LVL24:
 160:Src/usbd_conf.c **** }
 324              		.loc 1 160 0
 325              		@ sp needed
 326              	.LVL25:
 327 0016 70BD     		pop	{r4, r5, r6, pc}
 328              		.cfi_endproc
 329              	.LFE49:
 331              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 332              		.align	1
 333              		.global	HAL_PCD_SuspendCallback
 334              		.syntax unified
 335              		.code	16
 336              		.thumb_func
 337              		.fpu softvfp
 339              	HAL_PCD_SuspendCallback:
 340              	.LFB50:
 161:Src/usbd_conf.c **** 
 162:Src/usbd_conf.c **** /**
 163:Src/usbd_conf.c ****   * @brief  SOF callback.
 164:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 165:Src/usbd_conf.c ****   * @retval None
 166:Src/usbd_conf.c ****   */
 167:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 168:Src/usbd_conf.c **** {
 341              		.loc 1 168 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL26:
 169:Src/usbd_conf.c **** }
 347              		.loc 1 169 0
 348              		@ sp needed
 349 0000 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE50:
 353              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_PCD_ResumeCallback
 356              		.syntax unified
 357              		.code	16
 358              		.thumb_func
 359              		.fpu softvfp
 361              	HAL_PCD_ResumeCallback:
ARM GAS  /tmp/ccgx2QYb.s 			page 10


 362              	.LFB51:
 170:Src/usbd_conf.c **** 
 171:Src/usbd_conf.c **** /**
 172:Src/usbd_conf.c ****   * @brief  SOF callback.
 173:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 174:Src/usbd_conf.c ****   * @retval None
 175:Src/usbd_conf.c ****   */
 176:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 177:Src/usbd_conf.c **** {
 363              		.loc 1 177 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 368              	.LVL27:
 178:Src/usbd_conf.c **** }
 369              		.loc 1 178 0
 370              		@ sp needed
 371 0000 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE51:
 375              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 376              		.align	1
 377              		.global	HAL_PCD_ISOOUTIncompleteCallback
 378              		.syntax unified
 379              		.code	16
 380              		.thumb_func
 381              		.fpu softvfp
 383              	HAL_PCD_ISOOUTIncompleteCallback:
 384              	.LFB52:
 179:Src/usbd_conf.c **** 
 180:Src/usbd_conf.c **** /**
 181:Src/usbd_conf.c ****   * @brief  SOF callback.
 182:Src/usbd_conf.c ****   * @param  hpcd: PCD handle 
 183:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 184:Src/usbd_conf.c ****   * @retval None
 185:Src/usbd_conf.c ****   */
 186:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 187:Src/usbd_conf.c **** {
 385              		.loc 1 187 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LVL28:
 390 0000 10B5     		push	{r4, lr}
 391              	.LCFI7:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 4, -8
 394              		.cfi_offset 14, -4
 188:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 395              		.loc 1 188 0
 396 0002 9C23     		movs	r3, #156
 397 0004 9B00     		lsls	r3, r3, #2
 398 0006 C058     		ldr	r0, [r0, r3]
 399              	.LVL29:
 400 0008 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 401              	.LVL30:
ARM GAS  /tmp/ccgx2QYb.s 			page 11


 189:Src/usbd_conf.c **** }
 402              		.loc 1 189 0
 403              		@ sp needed
 404 000c 10BD     		pop	{r4, pc}
 405              		.cfi_endproc
 406              	.LFE52:
 408              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 409              		.align	1
 410              		.global	HAL_PCD_ISOINIncompleteCallback
 411              		.syntax unified
 412              		.code	16
 413              		.thumb_func
 414              		.fpu softvfp
 416              	HAL_PCD_ISOINIncompleteCallback:
 417              	.LFB53:
 190:Src/usbd_conf.c **** 
 191:Src/usbd_conf.c **** /**
 192:Src/usbd_conf.c ****   * @brief  SOF callback.
 193:Src/usbd_conf.c ****   * @param  hpcd: PCD handle 
 194:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 195:Src/usbd_conf.c ****   * @retval None
 196:Src/usbd_conf.c ****   */
 197:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 198:Src/usbd_conf.c **** {
 418              		.loc 1 198 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              	.LVL31:
 423 0000 10B5     		push	{r4, lr}
 424              	.LCFI8:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 199:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 428              		.loc 1 199 0
 429 0002 9C23     		movs	r3, #156
 430 0004 9B00     		lsls	r3, r3, #2
 431 0006 C058     		ldr	r0, [r0, r3]
 432              	.LVL32:
 433 0008 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 434              	.LVL33:
 200:Src/usbd_conf.c **** }
 435              		.loc 1 200 0
 436              		@ sp needed
 437 000c 10BD     		pop	{r4, pc}
 438              		.cfi_endproc
 439              	.LFE53:
 441              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 442              		.align	1
 443              		.global	HAL_PCD_ConnectCallback
 444              		.syntax unified
 445              		.code	16
 446              		.thumb_func
 447              		.fpu softvfp
 449              	HAL_PCD_ConnectCallback:
 450              	.LFB54:
ARM GAS  /tmp/ccgx2QYb.s 			page 12


 201:Src/usbd_conf.c **** 
 202:Src/usbd_conf.c **** /**
 203:Src/usbd_conf.c ****   * @brief  SOF callback.
 204:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 205:Src/usbd_conf.c ****   * @retval None
 206:Src/usbd_conf.c ****   */
 207:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 208:Src/usbd_conf.c **** {
 451              		.loc 1 208 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL34:
 456 0000 10B5     		push	{r4, lr}
 457              	.LCFI9:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 4, -8
 460              		.cfi_offset 14, -4
 209:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 461              		.loc 1 209 0
 462 0002 9C23     		movs	r3, #156
 463 0004 9B00     		lsls	r3, r3, #2
 464 0006 C058     		ldr	r0, [r0, r3]
 465              	.LVL35:
 466 0008 FFF7FEFF 		bl	USBD_LL_DevConnected
 467              	.LVL36:
 210:Src/usbd_conf.c **** }
 468              		.loc 1 210 0
 469              		@ sp needed
 470 000c 10BD     		pop	{r4, pc}
 471              		.cfi_endproc
 472              	.LFE54:
 474              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 475              		.align	1
 476              		.global	HAL_PCD_DisconnectCallback
 477              		.syntax unified
 478              		.code	16
 479              		.thumb_func
 480              		.fpu softvfp
 482              	HAL_PCD_DisconnectCallback:
 483              	.LFB55:
 211:Src/usbd_conf.c **** 
 212:Src/usbd_conf.c **** /**
 213:Src/usbd_conf.c ****   * @brief  SOF callback.
 214:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 215:Src/usbd_conf.c ****   * @retval None
 216:Src/usbd_conf.c ****   */
 217:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 218:Src/usbd_conf.c **** {
 484              		.loc 1 218 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              	.LVL37:
 489 0000 10B5     		push	{r4, lr}
 490              	.LCFI10:
 491              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccgx2QYb.s 			page 13


 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 219:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 494              		.loc 1 219 0
 495 0002 9C23     		movs	r3, #156
 496 0004 9B00     		lsls	r3, r3, #2
 497 0006 C058     		ldr	r0, [r0, r3]
 498              	.LVL38:
 499 0008 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 500              	.LVL39:
 220:Src/usbd_conf.c **** }
 501              		.loc 1 220 0
 502              		@ sp needed
 503 000c 10BD     		pop	{r4, pc}
 504              		.cfi_endproc
 505              	.LFE55:
 507              		.section	.text.USBD_LL_Init,"ax",%progbits
 508              		.align	1
 509              		.global	USBD_LL_Init
 510              		.syntax unified
 511              		.code	16
 512              		.thumb_func
 513              		.fpu softvfp
 515              	USBD_LL_Init:
 516              	.LFB56:
 221:Src/usbd_conf.c **** 
 222:Src/usbd_conf.c **** /*******************************************************************************
 223:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 224:Src/usbd_conf.c **** *******************************************************************************/
 225:Src/usbd_conf.c **** 
 226:Src/usbd_conf.c **** /**
 227:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 228:Src/usbd_conf.c ****   * @param  pdev: Device handle
 229:Src/usbd_conf.c ****   * @retval USBD Status
 230:Src/usbd_conf.c ****   */
 231:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
 232:Src/usbd_conf.c **** {    
 517              		.loc 1 232 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              	.LVL40:
 522 0000 10B5     		push	{r4, lr}
 523              	.LCFI11:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 233:Src/usbd_conf.c ****   /* Set LL Driver parameters */
 234:Src/usbd_conf.c ****   hpcd.Instance = USB;
 527              		.loc 1 234 0
 528 0002 1A4C     		ldr	r4, .L19
 529 0004 1A4B     		ldr	r3, .L19+4
 530 0006 2360     		str	r3, [r4]
 235:Src/usbd_conf.c ****   hpcd.Init.dev_endpoints = 8;
 531              		.loc 1 235 0
 532 0008 0823     		movs	r3, #8
 533 000a 6360     		str	r3, [r4, #4]
ARM GAS  /tmp/ccgx2QYb.s 			page 14


 236:Src/usbd_conf.c ****   hpcd.Init.ep0_mps = 0x40;
 534              		.loc 1 236 0
 535 000c 3833     		adds	r3, r3, #56
 536 000e E360     		str	r3, [r4, #12]
 237:Src/usbd_conf.c ****   hpcd.Init.phy_itface = PCD_PHY_EMBEDDED;
 537              		.loc 1 237 0
 538 0010 3E3B     		subs	r3, r3, #62
 539 0012 2361     		str	r3, [r4, #16]
 238:Src/usbd_conf.c ****   hpcd.Init.speed = PCD_SPEED_FULL;
 540              		.loc 1 238 0
 541 0014 A360     		str	r3, [r4, #8]
 239:Src/usbd_conf.c ****   /* Link The driver to the stack */
 240:Src/usbd_conf.c ****   hpcd.pData = pdev;
 542              		.loc 1 240 0
 543 0016 9C23     		movs	r3, #156
 544 0018 9B00     		lsls	r3, r3, #2
 545 001a E050     		str	r0, [r4, r3]
 241:Src/usbd_conf.c ****   pdev->pData = &hpcd;
 546              		.loc 1 241 0
 547 001c 503B     		subs	r3, r3, #80
 548 001e C450     		str	r4, [r0, r3]
 242:Src/usbd_conf.c ****   /* Initialize LL Driver */
 243:Src/usbd_conf.c ****   HAL_PCD_Init(&hpcd);
 549              		.loc 1 243 0
 550 0020 2000     		movs	r0, r4
 551              	.LVL41:
 552 0022 FFF7FEFF 		bl	HAL_PCD_Init
 553              	.LVL42:
 244:Src/usbd_conf.c ****   
 245:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , 0x00 , PCD_SNG_BUF, 0x40);
 554              		.loc 1 245 0
 555 0026 4023     		movs	r3, #64
 556 0028 0022     		movs	r2, #0
 557 002a 0021     		movs	r1, #0
 558 002c 2000     		movs	r0, r4
 559 002e FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 560              	.LVL43:
 246:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , 0x80 , PCD_SNG_BUF, 0x80);
 561              		.loc 1 246 0
 562 0032 8023     		movs	r3, #128
 563 0034 0022     		movs	r2, #0
 564 0036 8021     		movs	r1, #128
 565 0038 2000     		movs	r0, r4
 566 003a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 567              	.LVL44:
 247:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , CDC_IN_EP , PCD_SNG_BUF, 0xC0);  
 568              		.loc 1 247 0
 569 003e C023     		movs	r3, #192
 570 0040 0022     		movs	r2, #0
 571 0042 8121     		movs	r1, #129
 572 0044 2000     		movs	r0, r4
 573 0046 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 574              	.LVL45:
 248:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , CDC_OUT_EP , PCD_SNG_BUF, 0x110);
 575              		.loc 1 248 0
 576 004a 8823     		movs	r3, #136
 577 004c 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/ccgx2QYb.s 			page 15


 578 004e 0022     		movs	r2, #0
 579 0050 0121     		movs	r1, #1
 580 0052 2000     		movs	r0, r4
 581 0054 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 582              	.LVL46:
 249:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , CDC_CMD_EP , PCD_SNG_BUF, 0x100);   
 583              		.loc 1 249 0
 584 0058 8023     		movs	r3, #128
 585 005a 5B00     		lsls	r3, r3, #1
 586 005c 0022     		movs	r2, #0
 587 005e 8221     		movs	r1, #130
 588 0060 2000     		movs	r0, r4
 589 0062 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 590              	.LVL47:
 250:Src/usbd_conf.c **** 
 251:Src/usbd_conf.c ****   return USBD_OK;
 252:Src/usbd_conf.c **** }
 591              		.loc 1 252 0
 592 0066 0020     		movs	r0, #0
 593              		@ sp needed
 594 0068 10BD     		pop	{r4, pc}
 595              	.L20:
 596 006a C046     		.align	2
 597              	.L19:
 598 006c 00000000 		.word	hpcd
 599 0070 005C0040 		.word	1073765376
 600              		.cfi_endproc
 601              	.LFE56:
 603              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 604              		.align	1
 605              		.global	USBD_LL_DeInit
 606              		.syntax unified
 607              		.code	16
 608              		.thumb_func
 609              		.fpu softvfp
 611              	USBD_LL_DeInit:
 612              	.LFB57:
 253:Src/usbd_conf.c **** 
 254:Src/usbd_conf.c **** /**
 255:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 256:Src/usbd_conf.c ****   * @param  pdev: Device handle
 257:Src/usbd_conf.c ****   * @retval USBD Status
 258:Src/usbd_conf.c ****   */
 259:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
 260:Src/usbd_conf.c **** {
 613              		.loc 1 260 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              	.LVL48:
 618 0000 10B5     		push	{r4, lr}
 619              	.LCFI12:
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 4, -8
 622              		.cfi_offset 14, -4
 261:Src/usbd_conf.c ****   HAL_PCD_DeInit((PCD_HandleTypeDef*)pdev->pData);
 623              		.loc 1 261 0
ARM GAS  /tmp/ccgx2QYb.s 			page 16


 624 0002 8823     		movs	r3, #136
 625 0004 9B00     		lsls	r3, r3, #2
 626 0006 C058     		ldr	r0, [r0, r3]
 627              	.LVL49:
 628 0008 FFF7FEFF 		bl	HAL_PCD_DeInit
 629              	.LVL50:
 262:Src/usbd_conf.c ****   return USBD_OK;
 263:Src/usbd_conf.c **** }
 630              		.loc 1 263 0
 631 000c 0020     		movs	r0, #0
 632              		@ sp needed
 633 000e 10BD     		pop	{r4, pc}
 634              		.cfi_endproc
 635              	.LFE57:
 637              		.section	.text.USBD_LL_Start,"ax",%progbits
 638              		.align	1
 639              		.global	USBD_LL_Start
 640              		.syntax unified
 641              		.code	16
 642              		.thumb_func
 643              		.fpu softvfp
 645              	USBD_LL_Start:
 646              	.LFB58:
 264:Src/usbd_conf.c **** 
 265:Src/usbd_conf.c **** /**
 266:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 267:Src/usbd_conf.c ****   * @param  pdev: Device handle
 268:Src/usbd_conf.c ****   * @retval USBD Status
 269:Src/usbd_conf.c ****   */
 270:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
 271:Src/usbd_conf.c **** {
 647              		.loc 1 271 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              	.LVL51:
 652 0000 10B5     		push	{r4, lr}
 653              	.LCFI13:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 4, -8
 656              		.cfi_offset 14, -4
 272:Src/usbd_conf.c ****   HAL_PCD_Start((PCD_HandleTypeDef*)pdev->pData);
 657              		.loc 1 272 0
 658 0002 8823     		movs	r3, #136
 659 0004 9B00     		lsls	r3, r3, #2
 660 0006 C058     		ldr	r0, [r0, r3]
 661              	.LVL52:
 662 0008 FFF7FEFF 		bl	HAL_PCD_Start
 663              	.LVL53:
 273:Src/usbd_conf.c ****   return USBD_OK;
 274:Src/usbd_conf.c **** }
 664              		.loc 1 274 0
 665 000c 0020     		movs	r0, #0
 666              		@ sp needed
 667 000e 10BD     		pop	{r4, pc}
 668              		.cfi_endproc
 669              	.LFE58:
ARM GAS  /tmp/ccgx2QYb.s 			page 17


 671              		.section	.text.USBD_LL_Stop,"ax",%progbits
 672              		.align	1
 673              		.global	USBD_LL_Stop
 674              		.syntax unified
 675              		.code	16
 676              		.thumb_func
 677              		.fpu softvfp
 679              	USBD_LL_Stop:
 680              	.LFB59:
 275:Src/usbd_conf.c **** 
 276:Src/usbd_conf.c **** /**
 277:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 278:Src/usbd_conf.c ****   * @param  pdev: Device handle
 279:Src/usbd_conf.c ****   * @retval USBD Status
 280:Src/usbd_conf.c ****   */
 281:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Stop(USBD_HandleTypeDef *pdev)
 282:Src/usbd_conf.c **** {
 681              		.loc 1 282 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL54:
 686 0000 10B5     		push	{r4, lr}
 687              	.LCFI14:
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 283:Src/usbd_conf.c ****   HAL_PCD_Stop((PCD_HandleTypeDef*)pdev->pData);
 691              		.loc 1 283 0
 692 0002 8823     		movs	r3, #136
 693 0004 9B00     		lsls	r3, r3, #2
 694 0006 C058     		ldr	r0, [r0, r3]
 695              	.LVL55:
 696 0008 FFF7FEFF 		bl	HAL_PCD_Stop
 697              	.LVL56:
 284:Src/usbd_conf.c ****   return USBD_OK;
 285:Src/usbd_conf.c **** }
 698              		.loc 1 285 0
 699 000c 0020     		movs	r0, #0
 700              		@ sp needed
 701 000e 10BD     		pop	{r4, pc}
 702              		.cfi_endproc
 703              	.LFE59:
 705              		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 706              		.align	1
 707              		.global	USBD_LL_OpenEP
 708              		.syntax unified
 709              		.code	16
 710              		.thumb_func
 711              		.fpu softvfp
 713              	USBD_LL_OpenEP:
 714              	.LFB60:
 286:Src/usbd_conf.c **** 
 287:Src/usbd_conf.c **** /**
 288:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 289:Src/usbd_conf.c ****   * @param  pdev: Device handle
 290:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
ARM GAS  /tmp/ccgx2QYb.s 			page 18


 291:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 292:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 293:Src/usbd_conf.c ****   * @retval USBD Status
 294:Src/usbd_conf.c ****   */
 295:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev,
 296:Src/usbd_conf.c ****                                   uint8_t ep_addr,
 297:Src/usbd_conf.c ****                                   uint8_t ep_type,
 298:Src/usbd_conf.c ****                                   uint16_t ep_mps)
 299:Src/usbd_conf.c **** {
 715              		.loc 1 299 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              	.LVL57:
 720 0000 10B5     		push	{r4, lr}
 721              	.LCFI15:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 4, -8
 724              		.cfi_offset 14, -4
 725 0002 1400     		movs	r4, r2
 726 0004 1A00     		movs	r2, r3
 727              	.LVL58:
 300:Src/usbd_conf.c ****   HAL_PCD_EP_Open((PCD_HandleTypeDef*)pdev->pData,
 728              		.loc 1 300 0
 729 0006 8823     		movs	r3, #136
 730              	.LVL59:
 731 0008 9B00     		lsls	r3, r3, #2
 732 000a C058     		ldr	r0, [r0, r3]
 733              	.LVL60:
 734 000c 2300     		movs	r3, r4
 735 000e FFF7FEFF 		bl	HAL_PCD_EP_Open
 736              	.LVL61:
 301:Src/usbd_conf.c ****                   ep_addr,
 302:Src/usbd_conf.c ****                   ep_mps,
 303:Src/usbd_conf.c ****                   ep_type);
 304:Src/usbd_conf.c ****   
 305:Src/usbd_conf.c ****   return USBD_OK;
 306:Src/usbd_conf.c **** }
 737              		.loc 1 306 0
 738 0012 0020     		movs	r0, #0
 739              		@ sp needed
 740 0014 10BD     		pop	{r4, pc}
 741              		.cfi_endproc
 742              	.LFE60:
 744              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 745              		.align	1
 746              		.global	USBD_LL_CloseEP
 747              		.syntax unified
 748              		.code	16
 749              		.thumb_func
 750              		.fpu softvfp
 752              	USBD_LL_CloseEP:
 753              	.LFB61:
 307:Src/usbd_conf.c **** 
 308:Src/usbd_conf.c **** /**
 309:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 310:Src/usbd_conf.c ****   * @param  pdev: Device handle
ARM GAS  /tmp/ccgx2QYb.s 			page 19


 311:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 312:Src/usbd_conf.c ****   * @retval USBD Status
 313:Src/usbd_conf.c ****   */
 314:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 315:Src/usbd_conf.c **** {
 754              		.loc 1 315 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              	.LVL62:
 759 0000 10B5     		push	{r4, lr}
 760              	.LCFI16:
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 4, -8
 763              		.cfi_offset 14, -4
 316:Src/usbd_conf.c ****   HAL_PCD_EP_Close((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 764              		.loc 1 316 0
 765 0002 8823     		movs	r3, #136
 766 0004 9B00     		lsls	r3, r3, #2
 767 0006 C058     		ldr	r0, [r0, r3]
 768              	.LVL63:
 769 0008 FFF7FEFF 		bl	HAL_PCD_EP_Close
 770              	.LVL64:
 317:Src/usbd_conf.c ****   return USBD_OK;
 318:Src/usbd_conf.c **** }
 771              		.loc 1 318 0
 772 000c 0020     		movs	r0, #0
 773              		@ sp needed
 774 000e 10BD     		pop	{r4, pc}
 775              		.cfi_endproc
 776              	.LFE61:
 778              		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 779              		.align	1
 780              		.global	USBD_LL_FlushEP
 781              		.syntax unified
 782              		.code	16
 783              		.thumb_func
 784              		.fpu softvfp
 786              	USBD_LL_FlushEP:
 787              	.LFB62:
 319:Src/usbd_conf.c **** 
 320:Src/usbd_conf.c **** /**
 321:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 322:Src/usbd_conf.c ****   * @param  pdev: Device handle
 323:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 324:Src/usbd_conf.c ****   * @retval USBD Status
 325:Src/usbd_conf.c ****   */
 326:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_FlushEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 327:Src/usbd_conf.c **** {
 788              		.loc 1 327 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              	.LVL65:
 793 0000 10B5     		push	{r4, lr}
 794              	.LCFI17:
 795              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccgx2QYb.s 			page 20


 796              		.cfi_offset 4, -8
 797              		.cfi_offset 14, -4
 328:Src/usbd_conf.c ****   HAL_PCD_EP_Flush((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 798              		.loc 1 328 0
 799 0002 8823     		movs	r3, #136
 800 0004 9B00     		lsls	r3, r3, #2
 801 0006 C058     		ldr	r0, [r0, r3]
 802              	.LVL66:
 803 0008 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 804              	.LVL67:
 329:Src/usbd_conf.c ****   return USBD_OK;
 330:Src/usbd_conf.c **** }
 805              		.loc 1 330 0
 806 000c 0020     		movs	r0, #0
 807              		@ sp needed
 808 000e 10BD     		pop	{r4, pc}
 809              		.cfi_endproc
 810              	.LFE62:
 812              		.section	.text.USBD_LL_StallEP,"ax",%progbits
 813              		.align	1
 814              		.global	USBD_LL_StallEP
 815              		.syntax unified
 816              		.code	16
 817              		.thumb_func
 818              		.fpu softvfp
 820              	USBD_LL_StallEP:
 821              	.LFB63:
 331:Src/usbd_conf.c **** 
 332:Src/usbd_conf.c **** /**
 333:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 334:Src/usbd_conf.c ****   * @param  pdev: Device handle
 335:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 336:Src/usbd_conf.c ****   * @retval USBD Status
 337:Src/usbd_conf.c ****   */
 338:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 339:Src/usbd_conf.c **** {
 822              		.loc 1 339 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 826              	.LVL68:
 827 0000 10B5     		push	{r4, lr}
 828              	.LCFI18:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 4, -8
 831              		.cfi_offset 14, -4
 340:Src/usbd_conf.c ****   HAL_PCD_EP_SetStall((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 832              		.loc 1 340 0
 833 0002 8823     		movs	r3, #136
 834 0004 9B00     		lsls	r3, r3, #2
 835 0006 C058     		ldr	r0, [r0, r3]
 836              	.LVL69:
 837 0008 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 838              	.LVL70:
 341:Src/usbd_conf.c ****   return USBD_OK;
 342:Src/usbd_conf.c **** }
 839              		.loc 1 342 0
ARM GAS  /tmp/ccgx2QYb.s 			page 21


 840 000c 0020     		movs	r0, #0
 841              		@ sp needed
 842 000e 10BD     		pop	{r4, pc}
 843              		.cfi_endproc
 844              	.LFE63:
 846              		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 847              		.align	1
 848              		.global	USBD_LL_ClearStallEP
 849              		.syntax unified
 850              		.code	16
 851              		.thumb_func
 852              		.fpu softvfp
 854              	USBD_LL_ClearStallEP:
 855              	.LFB64:
 343:Src/usbd_conf.c **** 
 344:Src/usbd_conf.c **** /**
 345:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 346:Src/usbd_conf.c ****   * @param  pdev: Device handle
 347:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 348:Src/usbd_conf.c ****   * @retval USBD Status
 349:Src/usbd_conf.c ****   */
 350:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 351:Src/usbd_conf.c **** {
 856              		.loc 1 351 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              	.LVL71:
 861 0000 10B5     		push	{r4, lr}
 862              	.LCFI19:
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 4, -8
 865              		.cfi_offset 14, -4
 352:Src/usbd_conf.c ****   HAL_PCD_EP_ClrStall((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 866              		.loc 1 352 0
 867 0002 8823     		movs	r3, #136
 868 0004 9B00     		lsls	r3, r3, #2
 869 0006 C058     		ldr	r0, [r0, r3]
 870              	.LVL72:
 871 0008 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 872              	.LVL73:
 353:Src/usbd_conf.c ****   return USBD_OK; 
 354:Src/usbd_conf.c **** }
 873              		.loc 1 354 0
 874 000c 0020     		movs	r0, #0
 875              		@ sp needed
 876 000e 10BD     		pop	{r4, pc}
 877              		.cfi_endproc
 878              	.LFE64:
 880              		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 881              		.align	1
 882              		.global	USBD_LL_IsStallEP
 883              		.syntax unified
 884              		.code	16
 885              		.thumb_func
 886              		.fpu softvfp
 888              	USBD_LL_IsStallEP:
ARM GAS  /tmp/ccgx2QYb.s 			page 22


 889              	.LFB65:
 355:Src/usbd_conf.c **** 
 356:Src/usbd_conf.c **** /**
 357:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 358:Src/usbd_conf.c ****   * @param  pdev: Device handle
 359:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 360:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 361:Src/usbd_conf.c ****   */
 362:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 363:Src/usbd_conf.c **** {
 890              		.loc 1 363 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895              	.LVL74:
 896 0000 0A00     		movs	r2, r1
 364:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*)pdev->pData;
 897              		.loc 1 364 0
 898 0002 8823     		movs	r3, #136
 899 0004 9B00     		lsls	r3, r3, #2
 900 0006 C358     		ldr	r3, [r0, r3]
 901              	.LVL75:
 365:Src/usbd_conf.c ****   
 366:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 902              		.loc 1 366 0
 903 0008 49B2     		sxtb	r1, r1
 904 000a 0029     		cmp	r1, #0
 905 000c 07DB     		blt	.L32
 367:Src/usbd_conf.c ****   {
 368:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 369:Src/usbd_conf.c ****   }
 370:Src/usbd_conf.c ****   else
 371:Src/usbd_conf.c ****   {
 372:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 906              		.loc 1 372 0
 907 000e 7F21     		movs	r1, #127
 908              	.LVL76:
 909 0010 1140     		ands	r1, r2
 910 0012 4901     		lsls	r1, r1, #5
 911 0014 5B18     		adds	r3, r3, r1
 912              	.LVL77:
 913 0016 2B33     		adds	r3, r3, #43
 914 0018 FF33     		adds	r3, r3, #255
 915 001a 1878     		ldrb	r0, [r3]
 916              	.LVL78:
 917              	.L31:
 373:Src/usbd_conf.c ****   }
 374:Src/usbd_conf.c **** }
 918              		.loc 1 374 0
 919              		@ sp needed
 920 001c 7047     		bx	lr
 921              	.LVL79:
 922              	.L32:
 368:Src/usbd_conf.c ****   }
 923              		.loc 1 368 0
 924 001e 7F21     		movs	r1, #127
ARM GAS  /tmp/ccgx2QYb.s 			page 23


 925 0020 1140     		ands	r1, r2
 926 0022 4901     		lsls	r1, r1, #5
 927 0024 5B18     		adds	r3, r3, r1
 928              	.LVL80:
 929 0026 2A33     		adds	r3, r3, #42
 930 0028 1878     		ldrb	r0, [r3]
 931              	.LVL81:
 932 002a F7E7     		b	.L31
 933              		.cfi_endproc
 934              	.LFE65:
 936              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 937              		.align	1
 938              		.global	USBD_LL_SetUSBAddress
 939              		.syntax unified
 940              		.code	16
 941              		.thumb_func
 942              		.fpu softvfp
 944              	USBD_LL_SetUSBAddress:
 945              	.LFB66:
 375:Src/usbd_conf.c **** 
 376:Src/usbd_conf.c **** /**
 377:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 378:Src/usbd_conf.c ****   * @param  pdev: Device handle
 379:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 380:Src/usbd_conf.c ****   * @retval USBD Status
 381:Src/usbd_conf.c ****   */
 382:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
 383:Src/usbd_conf.c **** {
 946              		.loc 1 383 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              	.LVL82:
 951 0000 10B5     		push	{r4, lr}
 952              	.LCFI20:
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 4, -8
 955              		.cfi_offset 14, -4
 384:Src/usbd_conf.c ****   HAL_PCD_SetAddress((PCD_HandleTypeDef*)pdev->pData, dev_addr);
 956              		.loc 1 384 0
 957 0002 8823     		movs	r3, #136
 958 0004 9B00     		lsls	r3, r3, #2
 959 0006 C058     		ldr	r0, [r0, r3]
 960              	.LVL83:
 961 0008 FFF7FEFF 		bl	HAL_PCD_SetAddress
 962              	.LVL84:
 385:Src/usbd_conf.c ****   return USBD_OK; 
 386:Src/usbd_conf.c **** }
 963              		.loc 1 386 0
 964 000c 0020     		movs	r0, #0
 965              		@ sp needed
 966 000e 10BD     		pop	{r4, pc}
 967              		.cfi_endproc
 968              	.LFE66:
 970              		.section	.text.USBD_LL_Transmit,"ax",%progbits
 971              		.align	1
 972              		.global	USBD_LL_Transmit
ARM GAS  /tmp/ccgx2QYb.s 			page 24


 973              		.syntax unified
 974              		.code	16
 975              		.thumb_func
 976              		.fpu softvfp
 978              	USBD_LL_Transmit:
 979              	.LFB67:
 387:Src/usbd_conf.c **** 
 388:Src/usbd_conf.c **** /**
 389:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 390:Src/usbd_conf.c ****   * @param  pdev: Device handle
 391:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 392:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 393:Src/usbd_conf.c ****   * @param  size: Data size    
 394:Src/usbd_conf.c ****   * @retval USBD Status
 395:Src/usbd_conf.c ****   */
 396:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, 
 397:Src/usbd_conf.c ****                                     uint8_t ep_addr,
 398:Src/usbd_conf.c ****                                     uint8_t *pbuf,
 399:Src/usbd_conf.c ****                                     uint16_t size)
 400:Src/usbd_conf.c **** {
 980              		.loc 1 400 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              	.LVL85:
 985 0000 10B5     		push	{r4, lr}
 986              	.LCFI21:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 4, -8
 989              		.cfi_offset 14, -4
 401:Src/usbd_conf.c ****   HAL_PCD_EP_Transmit((PCD_HandleTypeDef*)pdev->pData, ep_addr, pbuf, size);
 990              		.loc 1 401 0
 991 0002 8824     		movs	r4, #136
 992 0004 A400     		lsls	r4, r4, #2
 993 0006 0059     		ldr	r0, [r0, r4]
 994              	.LVL86:
 995 0008 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 996              	.LVL87:
 402:Src/usbd_conf.c ****   return USBD_OK;
 403:Src/usbd_conf.c **** }
 997              		.loc 1 403 0
 998 000c 0020     		movs	r0, #0
 999              		@ sp needed
 1000 000e 10BD     		pop	{r4, pc}
 1001              		.cfi_endproc
 1002              	.LFE67:
 1004              		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1005              		.align	1
 1006              		.global	USBD_LL_PrepareReceive
 1007              		.syntax unified
 1008              		.code	16
 1009              		.thumb_func
 1010              		.fpu softvfp
 1012              	USBD_LL_PrepareReceive:
 1013              	.LFB68:
 404:Src/usbd_conf.c **** 
 405:Src/usbd_conf.c **** /**
ARM GAS  /tmp/ccgx2QYb.s 			page 25


 406:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 407:Src/usbd_conf.c ****   * @param  pdev: Device handle
 408:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 409:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 410:Src/usbd_conf.c ****   * @param  size: Data size
 411:Src/usbd_conf.c ****   * @retval USBD Status
 412:Src/usbd_conf.c ****   */
 413:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 414:Src/usbd_conf.c ****                                           uint8_t ep_addr,
 415:Src/usbd_conf.c ****                                           uint8_t *pbuf,
 416:Src/usbd_conf.c ****                                           uint16_t size)
 417:Src/usbd_conf.c **** {
 1014              		.loc 1 417 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018              	.LVL88:
 1019 0000 10B5     		push	{r4, lr}
 1020              	.LCFI22:
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 4, -8
 1023              		.cfi_offset 14, -4
 418:Src/usbd_conf.c ****   HAL_PCD_EP_Receive((PCD_HandleTypeDef*)pdev->pData, ep_addr, pbuf, size);
 1024              		.loc 1 418 0
 1025 0002 8824     		movs	r4, #136
 1026 0004 A400     		lsls	r4, r4, #2
 1027 0006 0059     		ldr	r0, [r0, r4]
 1028              	.LVL89:
 1029 0008 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 1030              	.LVL90:
 419:Src/usbd_conf.c ****   return USBD_OK;
 420:Src/usbd_conf.c **** }
 1031              		.loc 1 420 0
 1032 000c 0020     		movs	r0, #0
 1033              		@ sp needed
 1034 000e 10BD     		pop	{r4, pc}
 1035              		.cfi_endproc
 1036              	.LFE68:
 1038              		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1039              		.align	1
 1040              		.global	USBD_LL_GetRxDataSize
 1041              		.syntax unified
 1042              		.code	16
 1043              		.thumb_func
 1044              		.fpu softvfp
 1046              	USBD_LL_GetRxDataSize:
 1047              	.LFB69:
 421:Src/usbd_conf.c **** 
 422:Src/usbd_conf.c **** /**
 423:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 424:Src/usbd_conf.c ****   * @param  pdev: Device handle
 425:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 426:Src/usbd_conf.c ****   * @retval Recived Data Size
 427:Src/usbd_conf.c ****   */
 428:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 429:Src/usbd_conf.c **** {
 1048              		.loc 1 429 0
ARM GAS  /tmp/ccgx2QYb.s 			page 26


 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 0
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052              	.LVL91:
 1053 0000 10B5     		push	{r4, lr}
 1054              	.LCFI23:
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 4, -8
 1057              		.cfi_offset 14, -4
 430:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 1058              		.loc 1 430 0
 1059 0002 8823     		movs	r3, #136
 1060 0004 9B00     		lsls	r3, r3, #2
 1061 0006 C058     		ldr	r0, [r0, r3]
 1062              	.LVL92:
 1063 0008 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1064              	.LVL93:
 431:Src/usbd_conf.c **** }
 1065              		.loc 1 431 0
 1066              		@ sp needed
 1067 000c 10BD     		pop	{r4, pc}
 1068              		.cfi_endproc
 1069              	.LFE69:
 1071              		.section	.text.USBD_LL_Delay,"ax",%progbits
 1072              		.align	1
 1073              		.global	USBD_LL_Delay
 1074              		.syntax unified
 1075              		.code	16
 1076              		.thumb_func
 1077              		.fpu softvfp
 1079              	USBD_LL_Delay:
 1080              	.LFB70:
 432:Src/usbd_conf.c **** 
 433:Src/usbd_conf.c **** /**
 434:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 435:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 436:Src/usbd_conf.c ****   * @retval None
 437:Src/usbd_conf.c ****   */
 438:Src/usbd_conf.c **** void USBD_LL_Delay(uint32_t Delay)
 439:Src/usbd_conf.c **** {
 1081              		.loc 1 439 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              	.LVL94:
 1086 0000 10B5     		push	{r4, lr}
 1087              	.LCFI24:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 4, -8
 1090              		.cfi_offset 14, -4
 440:Src/usbd_conf.c ****   HAL_Delay(Delay);
 1091              		.loc 1 440 0
 1092 0002 FFF7FEFF 		bl	HAL_Delay
 1093              	.LVL95:
 441:Src/usbd_conf.c **** }
 1094              		.loc 1 441 0
 1095              		@ sp needed
ARM GAS  /tmp/ccgx2QYb.s 			page 27


 1096 0006 10BD     		pop	{r4, pc}
 1097              		.cfi_endproc
 1098              	.LFE70:
 1100              		.section	.text.USBD_static_malloc,"ax",%progbits
 1101              		.align	1
 1102              		.global	USBD_static_malloc
 1103              		.syntax unified
 1104              		.code	16
 1105              		.thumb_func
 1106              		.fpu softvfp
 1108              	USBD_static_malloc:
 1109              	.LFB71:
 442:Src/usbd_conf.c **** 
 443:Src/usbd_conf.c **** /**
 444:Src/usbd_conf.c ****   * @brief  static single allocation.
 445:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 446:Src/usbd_conf.c ****   * @retval None
 447:Src/usbd_conf.c ****   */
 448:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 449:Src/usbd_conf.c **** {
 1110              		.loc 1 449 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 1115              	.LVL96:
 450:Src/usbd_conf.c ****   static uint32_t mem[MAX_STATIC_ALLOC_SIZE];
 451:Src/usbd_conf.c ****   return mem;
 452:Src/usbd_conf.c **** }
 1116              		.loc 1 452 0
 1117 0000 0048     		ldr	r0, .L39
 1118              	.LVL97:
 1119              		@ sp needed
 1120 0002 7047     		bx	lr
 1121              	.L40:
 1122              		.align	2
 1123              	.L39:
 1124 0004 00000000 		.word	mem.7910
 1125              		.cfi_endproc
 1126              	.LFE71:
 1128              		.section	.text.USBD_static_free,"ax",%progbits
 1129              		.align	1
 1130              		.global	USBD_static_free
 1131              		.syntax unified
 1132              		.code	16
 1133              		.thumb_func
 1134              		.fpu softvfp
 1136              	USBD_static_free:
 1137              	.LFB72:
 453:Src/usbd_conf.c **** 
 454:Src/usbd_conf.c **** /**
 455:Src/usbd_conf.c ****   * @brief  Dummy memory free
 456:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 457:Src/usbd_conf.c ****   * @retval None
 458:Src/usbd_conf.c ****   */
 459:Src/usbd_conf.c **** void USBD_static_free(void *p)
 460:Src/usbd_conf.c **** {
ARM GAS  /tmp/ccgx2QYb.s 			page 28


 1138              		.loc 1 460 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143              	.LVL98:
 461:Src/usbd_conf.c **** 
 462:Src/usbd_conf.c **** }
 1144              		.loc 1 462 0
 1145              		@ sp needed
 1146 0000 7047     		bx	lr
 1147              		.cfi_endproc
 1148              	.LFE72:
 1150              		.comm	hpcd,628,4
 1151              		.comm	UserTxBuffer,512,4
 1152              		.comm	UserRxBuffer,512,4
 1153              		.section	.bss.mem.7910,"aw",%nobits
 1154              		.align	2
 1157              	mem.7910:
 1158 0000 00000000 		.space	560
 1158      00000000 
 1158      00000000 
 1158      00000000 
 1158      00000000 
 1159              		.text
 1160              	.Letext0:
 1161              		.file 2 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machin
 1162              		.file 3 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_s
 1163              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1164              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1165              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1166              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1167              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usb.h"
 1168              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 1169              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1170              		.file 11 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/l
 1171              		.file 12 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 1172              		.file 13 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1
 1173              		.file 14 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/r
 1174              		.file 15 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdli
 1175              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1176              		.file 17 "Inc/usbd_desc.h"
 1177              		.file 18 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1178              		.file 19 "Inc/usbd_cdc_interface.h"
 1179              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd_ex.h"
 1180              		.file 21 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 1181              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccgx2QYb.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
     /tmp/ccgx2QYb.s:16     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/ccgx2QYb.s:23     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/ccgx2QYb.s:103    .text.HAL_PCD_MspInit:000000000000005c $d
     /tmp/ccgx2QYb.s:108    .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/ccgx2QYb.s:115    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/ccgx2QYb.s:135    .text.HAL_PCD_MspDeInit:000000000000000c $d
     /tmp/ccgx2QYb.s:141    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:148    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/ccgx2QYb.s:179    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:186    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/ccgx2QYb.s:219    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:226    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/ccgx2QYb.s:257    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:264    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/ccgx2QYb.s:290    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:297    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/ccgx2QYb.s:332    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:339    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/ccgx2QYb.s:354    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:361    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/ccgx2QYb.s:376    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:383    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/ccgx2QYb.s:409    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:416    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/ccgx2QYb.s:442    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:449    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/ccgx2QYb.s:475    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/ccgx2QYb.s:482    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/ccgx2QYb.s:508    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/ccgx2QYb.s:515    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/ccgx2QYb.s:598    .text.USBD_LL_Init:000000000000006c $d
                            *COM*:0000000000000274 hpcd
     /tmp/ccgx2QYb.s:604    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/ccgx2QYb.s:611    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/ccgx2QYb.s:638    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/ccgx2QYb.s:645    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/ccgx2QYb.s:672    .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/ccgx2QYb.s:679    .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/ccgx2QYb.s:706    .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/ccgx2QYb.s:713    .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/ccgx2QYb.s:745    .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/ccgx2QYb.s:752    .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/ccgx2QYb.s:779    .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/ccgx2QYb.s:786    .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
     /tmp/ccgx2QYb.s:813    .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/ccgx2QYb.s:820    .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/ccgx2QYb.s:847    .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/ccgx2QYb.s:854    .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/ccgx2QYb.s:881    .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/ccgx2QYb.s:888    .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/ccgx2QYb.s:937    .text.USBD_LL_SetUSBAddress:0000000000000000 $t
     /tmp/ccgx2QYb.s:944    .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
     /tmp/ccgx2QYb.s:971    .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/ccgx2QYb.s:978    .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
     /tmp/ccgx2QYb.s:1005   .text.USBD_LL_PrepareReceive:0000000000000000 $t
ARM GAS  /tmp/ccgx2QYb.s 			page 30


     /tmp/ccgx2QYb.s:1012   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/ccgx2QYb.s:1039   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/ccgx2QYb.s:1046   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/ccgx2QYb.s:1072   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/ccgx2QYb.s:1079   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/ccgx2QYb.s:1101   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/ccgx2QYb.s:1108   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/ccgx2QYb.s:1124   .text.USBD_static_malloc:0000000000000004 $d
     /tmp/ccgx2QYb.s:1157   .bss.mem.7910:0000000000000000 mem.7910
     /tmp/ccgx2QYb.s:1129   .text.USBD_static_free:0000000000000000 $t
     /tmp/ccgx2QYb.s:1136   .text.USBD_static_free:0000000000000000 USBD_static_free
                            *COM*:0000000000000200 UserTxBuffer
                            *COM*:0000000000000200 UserRxBuffer
     /tmp/ccgx2QYb.s:1154   .bss.mem.7910:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
